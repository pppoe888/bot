
from telegram import Update
from telegram.ext import ContextTypes
from database import SessionLocal, User, Car, Shift
from keyboards import get_car_keyboard
from datetime import datetime

async def start_shift(update: Update, context: ContextTypes.DEFAULT_TYPE):
    db = SessionLocal()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –≤–æ–¥–∏—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω–∞—è —Å–º–µ–Ω–∞
    user = db.query(User).filter(User.telegram_id == update.effective_user.id).first()
    if not user:
        db.close()
        await update.message.reply_text("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    
    active_shift = db.query(Shift).filter(
        Shift.driver_id == user.id,
        Shift.status == "active"
    ).first()
    
    if active_shift:
        db.close()
        await update.message.reply_text("‚ùå –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–º–µ–Ω–∞!")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—à–∏–Ω
    cars = db.query(Car).all()
    db.close()
    
    if not cars:
        await update.message.reply_text("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—à–∏–Ω.")
        return
    
    await update.message.reply_text(
        "üöõ –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—à–∏–Ω—É –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–º–µ–Ω—ã:",
        reply_markup=get_car_keyboard(cars)
    )
